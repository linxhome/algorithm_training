Given an array of size n, find the majority element. The majority element is the element that appears more than ⌊ n/2 ⌋ times.

You may assume that the array is non-empty and the majority element always exist in the array.


fun majorityNum(nums:IntArray):Int {

    nums.sort()
    val middle = nums.size.div(2)
    return nums.get(middle)
}

fun majorityNum2(nums:List<Int>):Int {
    var moleValue = 0
    var moleTime = 0
    nums.forEach {
        if(moleTime <= 0) {
            moleValue = it
            moleTime = 1
        } else if (moleValue == it) {
            moleTime += 1
        } else if(moleValue != it) {
            moleTime -= 1
        }
    }
    return moleValue
}
